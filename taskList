****taskList.html***
<template>
    <div>
        <lightning-card title="Görev Listesi" class="task-card">
            <div class="slds-m-around_medium">
                <div class="task-input">
                    <input type="text" placeholder="Görev adını girin" value={newTask} oninput={handleTaskInputChange}></input>
                    <button onclick={addTask}>Ekle</button>
                </div>
                <ul class="task-list">
                    <template for:each={tasks} for:item="task" key={task.id}>
                        <li key={task.id} class="task-item">
                            <span>{task.name}</span>
                            <button onclick={editTask} data-id={task.id} class="edit-button">Düzenle</button>
                            <button onclick={deleteTask} data-id={task.id} class="delete-button">Sil</button>
                        </li>
                    </template>
                </ul>
            </div>
        </lightning-card>
    </div>
</template>

****taskList.js***
import { LightningElement, track } from 'lwc';

export default class TaskList extends LightningElement {
    @track newTask = '';
    @track tasks = [];
    @track taskIdCounter = 0;

    handleTaskInputChange(event) {
        this.newTask = event.target.value;
    }

    addTask() {
        if (this.newTask) {
            this.taskIdCounter++;
            this.tasks.push({ id: this.taskIdCounter, name: this.newTask });
            this.newTask = '';
        }
    }

    editTask(event) {
        const taskId = event.target.dataset.id;
        const taskIndex = this.tasks.findIndex(task => task.id == taskId);
        if (taskIndex !== -1) {
            const updatedTaskName = prompt('Görevi düzenle', this.tasks[taskIndex].name);
            if (updatedTaskName !== null) {
                this.tasks[taskIndex].name = updatedTaskName;
            }
        }
    }

    deleteTask(event) {
        const taskId = event.target.dataset.id;
        this.tasks = this.tasks.filter(task => task.id != taskId);
    }
}


**** taskList.css ***-

.task-card {
    padding: 20px;
    background-color: #f5f5f5;
    border: 1px solid #ddd;
}

.task-input {
    margin-bottom: 10px;
}

.task-input input {
    padding: 5px;
    border: 1px solid #ccc;
    border-radius: 4px;
}

.task-input button {
    padding: 5px 10px;
    background-color: #0070e0;
    color: #fff;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

.task-list {
    list-style: none;
    padding: 0;
}

.task-item {
    margin: 10px 0;
    display: flex;
    align-items: center;
    justify-content: space-between; /* Düzenle ve Sil düğmelerini yatayda hizalar */
}

.task-info {
    flex-grow: 1;
}

.edit-button,
.delete-button {
    padding: 5px 10px;
    background-color: #ff9900;
    color: #fff;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

.delete-button {
    background-color: #ff3333;
}
****taskList.js-meta.xml***
<?xml version="1.0" encoding="UTF-8"?>
<LightningComponentBundle xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>58.0</apiVersion>
   <isExposed>true</isExposed>
    <targets>
        <target>lightning__AppPage</target>
    </targets>
</LightningComponentBundle>
